#include "../Headers/Head_1.h"
#include "../Headers/Instructions.h"
#include "../Headers/utils.h"


std::map<std::string, Instruction> instructionSet = {
    {"ACI", Instruction("ACI", 0xCE, 2)},
    
    {"ADC A", Instruction("ADC A", 0x8F, 1)},
    {"ADC B", Instruction("ADC B", 0x88, 1)},
    {"ADC C", Instruction("ADC C", 0x89, 1)},
    {"ADC D", Instruction("ADC D", 0x8A, 1)},
    {"ADC E", Instruction("ADC E", 0x8B, 1)},
    {"ADC H", Instruction("ADC H", 0x8C, 1)},
    {"ADC L", Instruction("ADC L", 0x8D, 1)},
    {"ADC M", Instruction("ADC M", 0x8E, 1)},
    
    {"ADD A", Instruction("ADD A", 0x87, 1)},
    {"ADD B", Instruction("ADD B", 0x80, 1)},
    {"ADD C", Instruction("ADD C", 0x81, 1)},
    {"ADD D", Instruction("ADD D", 0x82, 1)},
    {"ADD E", Instruction("ADD E", 0x83, 1)},
    {"ADD H", Instruction("ADD H", 0x84, 1)},
    {"ADD L", Instruction("ADD L", 0x85, 1)},
    {"ADD M", Instruction("ADD M", 0x86, 1)},

    {"ADI", Instruction("ADI", 0xC6, 2)},
    
    {"ANA A", Instruction("ANA A", 0xA7, 1)},
    {"ANA B", Instruction("ANA B", 0xA0, 1)},
    {"ANA C", Instruction("ANA C", 0xA1, 1)},
    {"ANA D", Instruction("ANA D", 0xA2, 1)},
    {"ANA E", Instruction("ANA E", 0xA3, 1)},
    {"ANA H", Instruction("ANA H", 0xA4, 1)},
    {"ANA L", Instruction("ANA L", 0xA5, 1)},
    {"ANA M", Instruction("ANA M", 0xA6, 1)},
    
    {"ANI", Instruction("ANI", 0xE6, 2)},
    
    {"CALL", Instruction("CALL", 0xCD, 3)},
    {"CC", Instruction("CC", 0xDC, 3)},
    {"CM", Instruction("CM", 0xFC, 3)},
    {"CMA", Instruction("CMA", 0x2F, 1)},
    {"CMC", Instruction("CMC", 0x3F, 1)},
    
    {"CMP A", Instruction("CMP A", 0xBF, 1)},
    {"CMP B", Instruction("CMP B", 0xB8, 1)},
    {"CMP C", Instruction("CMP C", 0xB9, 1)},
    {"CMP D", Instruction("CMP D", 0xBA, 1)},
    {"CMP E", Instruction("CMP E", 0xBB, 1)},
    {"CMP H", Instruction("CMP H", 0xBC, 1)},
    {"CMP L", Instruction("CMP L", 0xBD, 1)},
    {"CMP M", Instruction("CMP M", 0xBE, 1)},
    
    {"CNC", Instruction("CNC", 0xD4, 3)},
    {"CNZ", Instruction("CNZ", 0xC4, 3)},
    {"CP", Instruction("CP", 0xF4, 3)},
    {"CPE", Instruction("CPE", 0xEC, 3)},
    {"CPI", Instruction("CPI", 0xFE, 2)},
    {"CPO", Instruction("CPO", 0xE4, 3)},
    {"CZ", Instruction("CZ", 0xCC, 3)},
    
    {"DAA", Instruction("DAA", 0x27, 1)},
    
    {"DAD B", Instruction("DAD B", 0x09, 1)},
    {"DAD D", Instruction("DAD D", 0x19, 1)},
    {"DAD H", Instruction("DAD H", 0x29, 1)},
    {"DAD SP", Instruction("DAD SP", 0x39, 1)},
    
    {"DCR A", Instruction("DCR A", 0x3D, 1)},
    {"DCR B", Instruction("DCR B", 0x05, 1)},
    {"DCR C", Instruction("DCR C", 0x0D, 1)},
    {"DCR D", Instruction("DCR D", 0x15, 1)},
    {"DCR E", Instruction("DCR E", 0x1D, 1)},
    {"DCR H", Instruction("DCR H", 0x25, 1)},
    {"DCR L", Instruction("DCR L", 0x2D, 1)},
    {"DCR M", Instruction("DCR M", 0x35, 1)},

    {"DCX B", Instruction("DCX B", 0x0B, 1)},
    {"DCX D", Instruction("DCX D", 0x1B, 1)},
    {"DCX H", Instruction("DCX H", 0x2B, 1)},
    {"DCX SP", Instruction("DCX SP", 0x3B, 1)},

    {"DI", Instruction("DI", 0xF3, 1)},
    {"EI", Instruction("EI", 0xFB, 1)},

    {"INR A", Instruction("INR A", 0x3C, 1)},
    {"INR B", Instruction("INR B", 0x04, 1)},
    {"INR C", Instruction("INR C", 0x0C, 1)},
    {"INR D", Instruction("INR D", 0x14, 1)},
    {"INR E", Instruction("INR E", 0x1C, 1)},
    {"INR H", Instruction("INR H", 0x24, 1)},
    {"INR L", Instruction("INR L", 0x2C, 1)},
    {"INR M", Instruction("INR M", 0x34, 1)},

    {"INX B", Instruction("INX B", 0x03, 1)},
    {"INX D", Instruction("INX D", 0x13, 1)},
    {"INX H", Instruction("INX H", 0x23, 1)},
    {"INX SP", Instruction("INX SP", 0x33, 1)},

    {"JC", Instruction("JC", 0xDA, 3)},
    {"JM", Instruction("JM", 0xFA, 3)},
    {"JMP", Instruction("JMP", 0xC3, 3)},
    {"JNC", Instruction("JNC", 0xD2, 3)},
    {"JNZ", Instruction("JNZ", 0xC2, 3)},
    {"JP", Instruction("JP", 0xF2, 3)},
    {"JPE", Instruction("JPE", 0xEA, 3)},
    {"JPO", Instruction("JPO", 0xE2, 3)},
    {"JZ", Instruction("JZ", 0xCA, 3)},

    {"LDA", Instruction("LDA", 0x3A, 3)},
    {"LDAX B", Instruction("LDAX B", 0x0A, 1)},
    {"LDAX D", Instruction("LDAX D", 0x1A, 1)},
    {"LHLD", Instruction("LHLD", 0x2A, 3)},
    
    {"LXI B", Instruction("LXI B", 0x01, 3)},
    {"LXI D", Instruction("LXI D", 0x11, 3)},
    {"LXI H", Instruction("LXI H", 0x21, 3)},
    {"LXI SP", Instruction("LXI SP", 0x31, 3)},
    
    {"MOV A, A", Instruction("MOV A, A", 0x7F, 1)},
    {"MOV A, B", Instruction("MOV A, B", 0x78, 1)},
    {"MOV A, C", Instruction("MOV A, C", 0x79, 1)},
    {"MOV A, D", Instruction("MOV A, D", 0x7A, 1)},
    {"MOV A, E", Instruction("MOV A, E", 0x7B, 1)},
    {"MOV A, H", Instruction("MOV A, H", 0x7C, 1)},
    {"MOV A, L", Instruction("MOV A, L", 0x7D, 1)},
    {"MOV A, M", Instruction("MOV A, M", 0x7E, 1)},

    {"MOV B, A", Instruction("MOV B, A", 0x47, 1)},
    {"MOV B, B", Instruction("MOV B, B", 0x40, 1)},
    {"MOV B, C", Instruction("MOV B, C", 0x41, 1)},
    {"MOV B, D", Instruction("MOV B, D", 0x42, 1)},
    {"MOV B, E", Instruction("MOV B, E", 0x43, 1)},
    {"MOV B, H", Instruction("MOV B, H", 0x44, 1)},
    {"MOV B, L", Instruction("MOV B, L", 0x45, 1)},
    {"MOV B, M", Instruction("MOV B, M", 0x46, 1)},

    {"MOV C, A", Instruction("MOV C, A", 0x4F, 1)},
    {"MOV C, B", Instruction("MOV C, B", 0x48, 1)},
    {"MOV C, C", Instruction("MOV C, C", 0x49, 1)},
    {"MOV C, D", Instruction("MOV C, D", 0x4A, 1)},
    {"MOV C, E", Instruction("MOV C, E", 0x4B, 1)},
    {"MOV C, H", Instruction("MOV C, H", 0x4C, 1)},
    {"MOV C, L", Instruction("MOV C, L", 0x4D, 1)},
    {"MOV C, M", Instruction("MOV C, M", 0x4E, 1)},

    {"MOV D, A", Instruction("MOV D, A", 0x57, 1)},
    {"MOV D, B", Instruction("MOV D, B", 0x50, 1)},
    {"MOV D, C", Instruction("MOV D, C", 0x51, 1)},
    {"MOV D, D", Instruction("MOV D, D", 0x52, 1)},
    {"MOV D, E", Instruction("MOV D, E", 0x53, 1)},
    {"MOV D, H", Instruction("MOV D, H", 0x54, 1)},
    {"MOV D, L", Instruction("MOV D, L", 0x55, 1)},
    {"MOV D, M", Instruction("MOV D, M", 0x56, 1)},

    {"MOV E, A", Instruction("MOV E, A", 0x5F, 1)},
    {"MOV E, B", Instruction("MOV E, B", 0x58, 1)},
    {"MOV E, C", Instruction("MOV E, C", 0x59, 1)},
    {"MOV E, D", Instruction("MOV E, D", 0x5A, 1)},
    {"MOV E, E", Instruction("MOV E, E", 0x5B, 1)},
    {"MOV E, H", Instruction("MOV E, H", 0x5C, 1)},
    {"MOV E, L", Instruction("MOV E, L", 0x5D, 1)},
    {"MOV E, M", Instruction("MOV E, M", 0x5E, 1)},

    { "MOV H, A", Instruction("MOV H, A", 0x67, 1) },
    { "MOV H, B", Instruction("MOV H, B", 0x60, 1) },
    { "MOV H, C", Instruction("MOV H, C", 0x61, 1) },
    { "MOV H, D", Instruction("MOV H, D", 0x62, 1) },
    { "MOV H, E", Instruction("MOV H, E", 0x63, 1) },
    { "MOV H, H", Instruction("MOV H, H", 0x64, 1) },
    { "MOV H, L", Instruction("MOV H, L", 0x65, 1) },
    { "MOV H, M", Instruction("MOV H, M", 0x66, 1) },

    { "MOV L, A", Instruction("MOV L, A", 0x6F, 1) },
    { "MOV L, B", Instruction("MOV L, B", 0x68, 1) },
    { "MOV L, C", Instruction("MOV L, C", 0x69, 1) },
    { "MOV L, D", Instruction("MOV L, D", 0x6A, 1) },
    { "MOV L, E", Instruction("MOV L, E", 0x6B, 1) },
    { "MOV L, H", Instruction("MOV L, H", 0x6C, 1) },
    { "MOV L, L", Instruction("MOV L, L", 0x6D, 1) },
    { "MOV L, M", Instruction("MOV L, M", 0x6E, 1) },
    
    { "MOV M, A", Instruction("MOV M, A", 0x77, 1) },
    { "MOV M, B", Instruction("MOV M, B", 0x70, 1) },
    { "MOV M, C", Instruction("MOV M, C", 0x71, 1) },
    { "MOV M, D", Instruction("MOV M, D", 0x72, 1) },
    { "MOV M, E", Instruction("MOV M, E", 0x73, 1) },
    { "MOV M, H", Instruction("MOV M, H", 0x74, 1) },
    { "MOV M, L", Instruction("MOV M, L", 0x75, 1) },

    {"MVI A",    Instruction("MVI A"   , 0x3E, 2)},
    {"MVI B",    Instruction("MVI B"   , 0x06, 2)},
    {"MVI C",    Instruction("MVI C"   , 0x0E, 2)},
    {"MVI D",    Instruction("MVI D"   , 0x16, 2)},
    {"MVI E",    Instruction("MVI E"   , 0x1E, 2)},
    {"MVI H",    Instruction("MVI H"   , 0x26, 2)},
    {"MVI L",    Instruction("MVI L"   , 0x2E, 2)},
    {"MVI M",    Instruction("MVI M"   , 0x36, 2)},

    {"NOP",    Instruction("NOP"   , 0x00, 1) },

    {"ORA A",    Instruction("ORA A"   , 0xB7, 1) },
    {"ORA B",    Instruction("ORA B"   , 0xB0, 1) },
    {"ORA C",    Instruction("ORA C"   , 0xB1, 1) },
    {"ORA D",    Instruction("ORA D"   , 0xB2, 1) },
    {"ORA E",    Instruction("ORA E"   , 0xB3, 1) },
    {"ORA H",    Instruction("ORA H"   , 0xB4, 1) },
    {"ORA L",    Instruction("ORA L"   , 0xB5, 1) },
    {"ORA M",    Instruction("ORA M"   , 0xB6, 1) },

    {"ORI",    Instruction("ORI"   , 0xF6, 2) },
    
    {"PCHL",    Instruction("PCHL"   , 0xE9, 1) },
    
    {"POP B",    Instruction("POP B"   , 0xC1, 1) },
    {"POP D",    Instruction("POP D"   , 0xD1, 1) },
    {"POP H",    Instruction("POP H"   , 0xE1, 1) },
    {"POP PSW",    Instruction("POP PSW"   , 0xF1, 1) },
    
    {"PUSH B",    Instruction("PUSH B"   , 0xC5, 1) },
    {"PUSH D",    Instruction("PUSH D"   , 0xD5, 1) },
    {"PUSH H",    Instruction("PUSH H"   , 0xE5, 1) },
    {"PUSH PSW",    Instruction("PUSH PSW"   , 0xF5, 1) },
    
    {"RAL",    Instruction("RAL"   , 0x17, 1) },
    {"RAR",    Instruction("RAR"   , 0x1F, 1) },
    {"RC",    Instruction("RC"   , 0xD8, 1) },
    {"RET",    Instruction("RET"   , 0xC9, 1) },
    {"RIM",    Instruction("RIM"   , 0x20, 1) },
    {"RLC",    Instruction("RLC"   , 0x07, 1) },
    {"RM",    Instruction("RM"   , 0xF8, 1) },
    {"RNC",    Instruction("RNC"   , 0xD0, 1) },
    {"RNZ",    Instruction("RNZ"   , 0xC0, 1) },
    {"RP",    Instruction("RP"   , 0xF0, 1) },
    {"RPE",    Instruction("RPE"   , 0xE8, 1) },
    {"RPO",    Instruction("RPO"   , 0xE0, 1) },
    {"RRC",    Instruction("RRC"   , 0x0F, 1) },
    
    {"RST 0",    Instruction("RST 0"   , 0xC7, 1) },
    {"RST 1",    Instruction("RST 1"   , 0xCF, 1) },
    {"RST 2",    Instruction("RST 2"   , 0xD7, 1) },
    {"RST 3",    Instruction("RST 3"   , 0xDF, 1) },
    {"RST 4",    Instruction("RST 4"   , 0xE7, 1) },
    {"RST 5",    Instruction("RST 5"   , 0xEF, 1) },
    {"RST 6",    Instruction("RST 6"   , 0xF7, 1) },
    {"RST 7",    Instruction("RST 7"   , 0xFF, 1) },
    {"RZ",    Instruction("RZ"   , 0xC8, 1) },
    
    {"SBB A",    Instruction("SBB A"   , 0x9F, 1) },
    {"SBB B",    Instruction("SBB B"   , 0x98, 1) },
    {"SBB C",    Instruction("SBB C"   , 0x99, 1) },
    {"SBB D",    Instruction("SBB D"   , 0x9A, 1) },
    {"SBB E",    Instruction("SBB E"   , 0x9B, 1) },
    {"SBB H",    Instruction("SBB H"   , 0x9C, 1) },
    {"SBB L",    Instruction("SBB L"   , 0x9D, 1) },
    {"SBB M",    Instruction("SBB M"   , 0x9E, 1) },
    
    {"SBI",    Instruction("SBI"   , 0xDE, 2) },
    
    {"SHLD",    Instruction("SHLD"   , 0x22, 3) },
    {"SIM",    Instruction("SIM"   , 0x30, 1) },
    {"SPHL",    Instruction("SPHL"   , 0xF9, 1) },
    {"STA",    Instruction("STA"   , 0x32, 3) },
    {"STAX B",    Instruction("STAX B"   , 0x02, 1) },
    {"STAX D",    Instruction("STAX D"   , 0x12, 1) },
    {"STC",    Instruction("STC"   , 0x37, 1) },
    
    {"SUB A",    Instruction("SUB A"   , 0x97, 1) },
    {"SUB B",    Instruction("SUB B"   , 0x90, 1) },
    {"SUB C",    Instruction("SUB C"   , 0x91, 1) },
    {"SUB D",    Instruction("SUB D"   , 0x92, 1) },
    {"SUB E",    Instruction("SUB E"   , 0x93, 1) },
    {"SUB H",    Instruction("SUB H"   , 0x94, 1) },
    {"SUB L",    Instruction("SUB L"   , 0x95, 1) },
    {"SUB M",    Instruction("SUB M"   , 0x96, 1) },

    {"SUI",    Instruction("SUI"   , 0xD6, 2) },
    {"XCHG",    Instruction("XCHG"   , 0xEB, 1) },

    {"XRA A",    Instruction("XRA A"   , 0xAF, 1) },
    {"XRA B",    Instruction("XRA B"   , 0xA8, 1) },
    {"XRA C",    Instruction("XRA C"   , 0xA9, 1) },
    {"XRA D",    Instruction("XRA D"   , 0xAA, 1) },
    {"XRA E",    Instruction("XRA E"   , 0xAB, 1) },
    {"XRA H",    Instruction("XRA H"   , 0xAC, 1) },
    {"XRA L",    Instruction("XRA L"   , 0xAD, 1) },
    {"XRA M",    Instruction("XRA M"   , 0xAE, 1) },
    {"XRI",    Instruction("XRI"   , 0xEE, 2) },

    {"XTHL",    Instruction("XTHL"   , 0xE3, 1) },

    {"IN", Instruction("IN", 0xDB, 2)},
    {"OUT",    Instruction("OUT"   , 0xD3, 2)},

    {"HLT",      Instruction("HLT"     , 0x76, 1)},

};

std::map<std::string, std::function<void()>> instructionHandlers = {
    //{"MVI A", [] { /*debug*/("MVI A", 0); }}
};
